#########################################
# June 9, 2023
#
# Derived from the APT Communications
# Protocol Document available at:
#
# https://www.thorlabs.com/Software/Motion%20Control/APT_Communications_Protocol.pdf
#
# Issue 37 from 22 May 2023
#
########################################
# Warning
#
# There are errors in the commands below
# (maybe even more than in the APT doc)
#
# Make sure to check each command carefully
# in the APT Protocol document before using
#
# Use at your own risk
########################################

import string
import struct

header_only_struct = "<H2b2B"
header_data_struct = "<2H2B"
header_size = 6


cmd_list = {
    "hub": [
        {
            "msg_id": 0x0065,
            "fxn_name": "hub_req_bayused",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0066,
            "fxn_name": "hub_get_bayused",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "bay_ident", "0", "dst", "src"],
        },
    ],
    "hw": [
        {
            "msg_id": 0x0002,
            "fxn_name": "hw_disconnect",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0006,
            "fxn_name": "hw_get_info",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<L8sHL60sHHH",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "serial_num",
                "model_num",
                "type",
                "firmware_version",
                "",
                "hw_version",
                "mod_state",
                "nchs",
            ],
        },
        {
            "msg_id": 0x0252,
            "fxn_name": "hw_get_kcubemmilock",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "mmilock", "dst", "src"],
        },
        {
            "msg_id": 0x0018,
            "fxn_name": "hw_no_flash_programming",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0005,
            "fxn_name": "hw_req_info",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0251,
            "fxn_name": "hw_req_kcubemmilock",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "mmilock", "dst", "src"],
        },
        {
            "msg_id": 0x0080,
            "fxn_name": "hw_response",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0081,
            "fxn_name": "hw_richresponse",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<HH64s",
            "params": ["msg_id", "", "dst", "src", "msgident", "code", "notes"],
        },
        {
            "msg_id": 0x0250,
            "fxn_name": "hw_set_kcubemmilock",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "", "mmilock", "dst", "src"],
        },
        {
            "msg_id": 0x0011,
            "fxn_name": "hw_start_updatemsgs",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0012,
            "fxn_name": "hw_stop_updatemsgs",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0017,
            "fxn_name": "hw_yes_flash_programming",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
    ],
    "kna": [
        {
            "msg_id": 0x068C,
            "fxn_name": "kna_get_kcubemmiparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<8H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "wheelstep",
                "dispbrightness",
                "",
                "",
                "",
                "",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x068F,
            "fxn_name": "kna_get_kcubetrigioconfig",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<10H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "t1mode",
                "t1polarity",
                "t1par",
                "t2mode",
                "t2polarity",
                "t2par",
                "",
                "",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x0689,
            "fxn_name": "kna_get_nttialpfiltercoeffs",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<5L",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "param1",
                "param2",
                "param3",
                "param4",
                "param5",
            ],
        },
        {
            "msg_id": 0x06A1,
            "fxn_name": "kna_get_xyscan",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H96s",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "linenumber",
                "range",
                "intensitymap",
            ],
        },
        {
            "msg_id": 0x068B,
            "fxn_name": "kna_req_kcubemmiparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "", "", "dst", "src"],
        },
        {
            "msg_id": 0x068E,
            "fxn_name": "kna_req_kcubetrigioconfig",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "1", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0688,
            "fxn_name": "kna_req_nttialpfiltercoeffs",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x06A0,
            "fxn_name": "kna_req_xyscan",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "1", "0", "dst", "src"],
        },
        {
            "msg_id": 0x068A,
            "fxn_name": "kna_set_kcubemmiparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<8H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "wheelstep",
                "dispbrightness",
                "",
                "",
                "",
                "",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x068D,
            "fxn_name": "kna_set_kcubetrigioconfig",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<10H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "t1mode",
                "t1polarity",
                "t1par",
                "t2mode",
                "t2polarity",
                "t2par",
                "",
                "",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x0687,
            "fxn_name": "kna_set_nttialpfiltercoeffs",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<5L",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "param1",
                "param2",
                "param3",
                "param4",
                "param5",
            ],
        },
        {
            "msg_id": 0x06A2,
            "fxn_name": "kna_stop_xyscan",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
    ],
    "kpz": [
        {
            "msg_id": 0x07F0,
            "fxn_name": "kpz_set_kcubemmiparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3HLH2L7H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "channel",
                "mode",
                "jsvoltgearbox",
                "jsvoltstep",
                "dirsense",
                "presetvolt1",
                "presetvolt2",
                "dispbrightness",
                "disptimeout",
                "dispdimlevel",
                "",
                "",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x07F1,
            "fxn_name": "kpz_req_kcubemmiparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "channel", "0", "dst", "src"],
        },
        {
            "msg_id": 0x07F2,
            "fxn_name": "kpz_get_kcubemmiparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3HLH2L7H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "channel",
                "mode",
                "jsvoltgearbox",
                "jsvoltstep",
                "dirsense",
                "presetvolt1",
                "presetvolt2",
                "dispbrightness",
                "disptimeout",
                "dispdimlevel",
                "",
                "",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x07F3,
            "fxn_name": "kpz_set_kcubetrigioconfig",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<11H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "channel",
                "trig1mode",
                "trig1polarity",
                "trig2mode",
                "trig2polarity",
                "",
                "",
                "",
                "",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x07F4,
            "fxn_name": "kpz_req_kcubetrigioconfig",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "1", "0", "dst", "src"],
        },
        {
            "msg_id": 0x07F5,
            "fxn_name": "kpz_get_kcubetrigioconfig",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<11H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "channel",
                "trig1mode",
                "trig1polarity",
                "trig2mode",
                "trig2polarity",
                "",
                "",
                "",
                "",
                "",
                "",
            ],
        },
    ],
    "ksg": [
        {
            "msg_id": 0x07F6,
            "fxn_name": "ksg_set_kcubemmiparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<4H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "dispintensity",
                "disptimeout",
                "dispdimlevel",
            ],
        },
        {
            "msg_id": 0x07F7,
            "fxn_name": "ksg_req_kcubemmiparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "1", "0", "dst", "src"],
        },
        {
            "msg_id": 0x07F8,
            "fxn_name": "ksg_get_kcubemmiparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<4H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "dispintensity",
                "disptimeout",
                "dispdimlevel",
            ],
        },
        {
            "msg_id": 0x07F9,
            "fxn_name": "ksg_set_kcubetrigioconfig",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<5H2L2H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "trig1mode",
                "trig1polarity",
                "trig2mode",
                "trig2polarity",
                "lowerlim",
                "upperlim",
                "smoothingsamples",
                "",
            ],
        },
        {
            "msg_id": 0x07FA,
            "fxn_name": "ksg_req_kcubetrigioconfig",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "1", "0", "dst", "src"],
        },
        {
            "msg_id": 0x07FB,
            "fxn_name": "ksg_get_kcubetrigioconfig",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<5H2L2H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "trig1mode",
                "trig1polarity",
                "trig2mode",
                "trig2polarity",
                "lowerlim",
                "upperlim",
                "smoothingsamples",
                "",
            ],
        },
    ],
    "la": [
        {
            "msg_id": 0x0800,
            "fxn_name": "la_set_params",
            "header_only": False,
            "has_subcmds": True,
            "struct": "",
            "params": ["msg_id", "", "dst", "src"],
        },
        {
            "msg_id": 0x0801,
            "fxn_name": "la_req_params",
            "header_only": True,
            "has_subcmds": True,
            "struct": "",
            "params": ["msg_id", "submsg_id", "", "dst", "src"],
        },
        {
            "msg_id": 0x0802,
            "fxn_name": "la_get_params",
            "header_only": False,
            "has_subcmds": True,
            "struct": "",
            "params": ["msg_id", "", "dst", "src"],
        },
        {
            "msg_id": 0x0810,
            "fxn_name": "la_set_eepromparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<H",
            "params": ["msg_id", "", "dst", "src", "msgid"],
        },
        {
            "msg_id": 0x0811,
            "fxn_name": "la_enableoutput",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0812,
            "fxn_name": "la_disableoutput",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0820,
            "fxn_name": "la_req_statusupdate",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0821,
            "fxn_name": "la_get_statusupdate",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2hL",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "lasercurrent",
                "laserpower",
                "statusbits",
            ],
        },
        {
            "msg_id": 0x0822,
            "fxn_name": "la_ack_statusupdate",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x082A,
            "fxn_name": "la_set_kcubetrigioconfig",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<7H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "trig1mode",
                "trig1polarity",
                "",
                "trig2mode",
                "trig2polarity",
                "",
            ],
        },
        {
            "msg_id": 0x082B,
            "fxn_name": "la_req_kcubetrigconfig",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "0", "dst", "src"],
        },
        {
            "msg_id": 0x082C,
            "fxn_name": "la_get_kcubetrigconfig",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<7H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "trig1mode",
                "trig1polarity",
                "trig1par",
                "trig2mode",
                "trig2polarity",
                "trig2par",
            ],
        },
    ],
    "ld": [
        {
            "msg_id": 0x0813,
            "fxn_name": "ld_openloop",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0814,
            "fxn_name": "ld_closedloop",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0815,
            "fxn_name": "ld_potrotating",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0816,
            "fxn_name": "ld_maxcurrentadjust",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0817,  # vaguely documented
            "fxn_name": "ld_set_maxcurrentdigpot",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "maxcurrent", "", "dst", "src"],
        },
        {
            "msg_id": 0x0818,  # not documented
            "fxn_name": "ld_req_maxcurrentdigpot",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "", "", "dst", "src"],
        },
        {
            "msg_id": 0x0819,  # not documented
            "fxn_name": "ld_get_maxcurrentdigpot",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "maxcurrent", "", "dst", "src"],
        },
        {
            "msg_id": 0x081A,
            "fxn_name": "ld_findtiagain",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x081B,
            "fxn_name": "ld_tiagainadjust",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "enable", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0825,
            "fxn_name": "ld_req_statusupdate",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0826,
            "fxn_name": "ld_get_statusupdate",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3H2L",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "lasercurrent",
                "photocurrent",
                "laservoltage",
                "",
                "statusbits",
            ],
        },
        {
            "msg_id": 0x0827,
            "fxn_name": "ld_ack_statusupdate",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "", "", "dst", "src"],
        },
    ],
    "mod": [
        {
            "msg_id": 0x0223,
            "fxn_name": "mod_identify",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0210,
            "fxn_name": "mod_set_chanenablestate",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "enablestate", "dst", "src"],
        },
        {
            "msg_id": 0x0211,
            "fxn_name": "mod_req_chanenablestate",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0212,
            "fxn_name": "mod_get_chanenablestate",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "enablestate", "dst", "src"],
        },
        {
            "msg_id": 0x0213,
            "fxn_name": "mod_set_digoutputs",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "bit", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0214,
            "fxn_name": "mod_req_digoutputs",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "bits", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0215,
            "fxn_name": "mod_get_digoutputs",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "bit", "0", "dst", "src"],
        },
    ],
    "mot": [
        {
            "msg_id": 0x0410,
            "fxn_name": "mot_set_poscounter",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<HL",
            "params": ["msg_id", "", "dst", "src", "chanident", "position"],
        },
        {
            "msg_id": 0x0411,
            "fxn_name": "mot_req_poscounter",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0412,
            "fxn_name": "mot_get_poscounter",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<HL",
            "params": ["msg_id", "", "dst", "src", "chanident", "position"],
        },
        {
            "msg_id": 0x0409,
            "fxn_name": "mot_set_enccounter",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<HL",
            "params": ["msg_id", "", "dst", "src", "chanident", "encodercount"],
        },
        {
            "msg_id": 0x040A,
            "fxn_name": "mot_req_enccounter",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x040B,
            "fxn_name": "mot_get_enccounter",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<HL",
            "params": ["msg_id", "", "dst", "src", "chanident", "encodercount"],
        },
        {
            "msg_id": 0x0413,
            "fxn_name": "mot_set_velparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<H3L",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "minvelocity",
                "acceleration",
                "maxvelocity",
            ],
        },
        {
            "msg_id": 0x0414,
            "fxn_name": "mot_req_velparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0415,
            "fxn_name": "mot_get_velparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<H3L",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "minvelocity",
                "acceleration",
                "maxvelocity",
            ],
        },
        {
            "msg_id": 0x0416,
            "fxn_name": "mot_set_jogparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H4LH",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "jogmode",
                "jogstepsize",
                "jogminvelocity",
                "jogacceleration",
                "jogmaxvelocity",
                "stopmode",
            ],
        },
        {
            "msg_id": 0x0417,
            "fxn_name": "mot_req_jogparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0418,
            "fxn_name": "mot_get_jogparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H4LH",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "jogmode",
                "jogstepsize",
                "jogminvelocity",
                "jogacceleration",
                "jogmaxvelocity",
                "stopmode",
            ],
        },
        {
            "msg_id": 0x042B,
            "fxn_name": "mot_req_adcinputs",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "0", "dst", "src"],
        },
        {
            "msg_id": 0x042C,
            "fxn_name": "mot_get_adcinputs",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H",
            "params": ["msg_id", "", "dst", "src", "adcinput1", "adcinput2"],
        },
        {
            "msg_id": 0x0426,
            "fxn_name": "mot_set_powerparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "restfactor",
                "movefactor",
            ],
        },
        {
            "msg_id": 0x0427,
            "fxn_name": "mot_req_powerparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0428,
            "fxn_name": "mot_get_powerparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "restfactor",
                "movefactor",
            ],
        },
        {
            "msg_id": 0x043A,
            "fxn_name": "mot_set_genmoveparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<HL",
            "params": ["msg_id", "", "dst", "src", "chanident", "backlashdistance"],
        },
        {
            "msg_id": 0x043B,
            "fxn_name": "mot_req_genmoveparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x043C,
            "fxn_name": "mot_get_genmoveparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<HL",
            "params": ["msg_id", "", "dst", "src", "chanident", "backlashdistance"],
        },
        {
            "msg_id": 0x0445,
            "fxn_name": "mot_set_moverelparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<HL",
            "params": ["msg_id", "", "dst", "src", "chanident", "relativedistance"],
        },
        {
            "msg_id": 0x0446,
            "fxn_name": "mot_req_moverelparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0447,
            "fxn_name": "mot_get_moverelparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<HL",
            "params": ["msg_id", "", "dst", "src", "chanident", "relativedistance"],
        },
        {
            "msg_id": 0x0450,
            "fxn_name": "mot_set_moveabsparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<HL",
            "params": ["msg_id", "", "dst", "src", "chanident", "absoluteposition"],
        },
        {
            "msg_id": 0x0451,
            "fxn_name": "mot_req_moveabsparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0452,
            "fxn_name": "mot_get_moveabsparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<HL",
            "params": ["msg_id", "", "dst", "src", "chanident", "absoluteposition"],
        },
        {
            "msg_id": 0x0440,
            "fxn_name": "mot_set_homeparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3H2L",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "homedir",
                "limitswitch",
                "homevelocity",
                "offsetdistance",
            ],
        },
        {
            "msg_id": 0x0441,
            "fxn_name": "mot_req_homeparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0442,
            "fxn_name": "mot_get_homeparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3H2L",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "homedir",
                "limitswitch",
                "homevelocity",
                "offsetdistance",
            ],
        },
        {
            "msg_id": 0x0423,
            "fxn_name": "mot_set_limswitchparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3H2LH",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "cwhardlimit",
                "ccwhardlimit",
                "cwsoftlimit",
                "ccwsoftlimit",
                "limitmode",
            ],
        },
        {
            "msg_id": 0x0424,
            "fxn_name": "mot_req_limswitchparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0425,
            "fxn_name": "mot_get_limswitchparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3H2LH",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "cwhardlimit",
                "ccwhardlimit",
                "cwsoftlimit",
                "ccwsoftlimit",
                "limitmode",
            ],
        },
        {
            "msg_id": 0x0443,
            "fxn_name": "mot_move_home",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0444,
            "fxn_name": "mot_move_homed",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0448,
            "fxn_name": "mot_move_relative",  # short version
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0464,
            "fxn_name": "mot_move_completed",  # add motstatus motdcstatus p83
            "header_only": False,
            "has_subcmds": False,
            "struct": "<Hl2hL",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "position",
                "velocity",
                "motorcurrent",
                "statusbits",
            ],
        },
        {
            "msg_id": 0x0453,
            "fxn_name": "mot_move_absolute",  # short version
            "header_only": True,
            "has_subcmds": True,
            "struct": "",  # long version: <Hl
            "params": ["msg_id", "chanident", "", "dst", "src"],
            # "params": ["msg_id", "", "dst", "src", "chanident", "absolutedistance"],
        },
        {
            "msg_id": 0x046A,
            "fxn_name": "mot_move_jog",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "direction", "dst", "src"],
        },
        {
            "msg_id": 0x0457,
            "fxn_name": "mot_move_velocity",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "direction", "dst", "src"],
        },
        {
            "msg_id": 0x0465,
            "fxn_name": "mot_move_stop",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "stopmode", "dst", "src"],
        },
        {
            "msg_id": 0x0466,
            "fxn_name": "mot_move_stopped",  # short version p89
            "header_only": False,
            "has_subcmds": False,
            "struct": "<Hl2hL",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "position",
                "velocity",
                "motorcurrent",
                "statusbits",
            ],
        },
        {
            "msg_id": 0x04F4,
            "fxn_name": "mot_set_bowindex",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H",
            "params": ["msg_id", "", "dst", "src", "chanident", "bowindex"],
        },
        {
            "msg_id": 0x04F5,
            "fxn_name": "mot_req_bowindex",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x04F6,
            "fxn_name": "mot_get_bowindex",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H",
            "params": ["msg_id", "", "dst", "src", "chanident", "bowindex"],
        },
        {
            "msg_id": 0x04A0,
            "fxn_name": "mot_set_dcpidparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<H4LH",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "proportional",
                "integral",
                "differential",
                "integrallimit",
                "filtercontrol",
            ],
        },
        {
            "msg_id": 0x04A1,
            "fxn_name": "mot_req_dcpidparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x04A2,
            "fxn_name": "mot_get_dcpidparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<H4LH",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "proportional",
                "integral",
                "differential",
                "integrallimit",
                "filtercontrol",
            ],
        },
        {
            "msg_id": 0x04B3,
            "fxn_name": "mot_set_avmodes",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H",
            "params": ["msg_id", "", "dst", "src", "chanident", "modebits"],
        },
        {
            "msg_id": 0x04B4,
            "fxn_name": "mot_req_avmodes",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x04B5,
            "fxn_name": "mot_get_avmodes",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H",
            "params": ["msg_id", "", "dst", "src", "chanident", "modebits"],
        },
        {
            "msg_id": 0x04B0,
            "fxn_name": "mot_set_potparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2HLHLHLHL",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "zerownd",
                "vel1",
                "wnd1",
                "vel2",
                "wnd2",
                "vel3",
                "wnd3",
                "vel4",
            ],
        },
        {
            "msg_id": 0x04B1,
            "fxn_name": "mot_req_potparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x04B2,
            "fxn_name": "mot_get_potparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2HLHLHLHL",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "zerownd",
                "vel1",
                "wnd1",
                "vel2",
                "wnd2",
                "vel3",
                "wnd3",
                "vel4",
            ],
        },
        {
            "msg_id": 0x04B6,
            "fxn_name": "mot_set_buttonparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H2L2H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "mode",
                "position1",
                "position2",
                "timeout1",
                "timeout2",
            ],
        },
        {
            "msg_id": 0x04B7,
            "fxn_name": "mot_req_buttonparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x04B8,
            "fxn_name": "mot_get_buttonparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H2L2H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "mode",
                "position1",
                "position2",
                "timeout1",
                "timeout2",
            ],
        },
        {
            "msg_id": 0x04B9,
            "fxn_name": "mot_set_eepromparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H",
            "params": ["msg_id", "", "dst", "src", "chanident", "msgid"],
        },
        {
            "msg_id": 0x04D7,
            "fxn_name": "mot_set_positionloopparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3HL5HL2H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "kppos",
                "integral",
                "ilimpos",
                "differential",
                "kdtimepos",
                "koutpos",
                "kvffpos",
                "kaffpos",
                "poserrlim",
                "paramsetix",
                "",
            ],
        },
        {
            "msg_id": 0x04D8,
            "fxn_name": "mot_req_positionloopparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x04D9,
            "fxn_name": "mot_get_positionloopparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3HL5HL2H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "kppos",
                "integral",
                "ilimpos",
                "differential",
                "kdtimepos",
                "koutpos",
                "kvffpos",
                "kaffpos",
                "poserrlim",
                "paramsetix",
                "",
            ],
        },
        {
            "msg_id": 0x04DA,
            "fxn_name": "mot_set_motoroutputparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<7H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "contcurrentlim",
                "energylimit",
                "motorlimit",
                "motorbias",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x04DB,
            "fxn_name": "mot_req_motoroutputparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x04DC,
            "fxn_name": "mot_get_motoroutputparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<7H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "contcurrentlim",
                "energylimit",
                "motorlimit",
                "motorbias",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x04E0,
            "fxn_name": "mot_set_tracksettleparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<6H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "time",
                "settlewindow",
                "trackwindow",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x04E1,
            "fxn_name": "mot_req_tracksettleparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x04E2,
            "fxn_name": "mot_get_tracksettleparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<6H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "time",
                "settlewindow",
                "trackwindow",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x04E3,
            "fxn_name": "mot_set_profilemodeparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2HL2H",
            "params": ["msg_id", "", "dst", "src", "chanident", "mode", "jerk", "", ""],
        },
        {
            "msg_id": 0x04E4,
            "fxn_name": "mot_req_profilemodeparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x04E5,
            "fxn_name": "mot_get_profilemodeparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2HL2H",
            "params": ["msg_id", "", "dst", "src", "chanident", "mode", "jerk", "", ""],
        },
        {
            "msg_id": 0x04E6,
            "fxn_name": "mot_set_joystickparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<H4LH",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "jsgearlowmaxvel",
                "jsgearhighmaxvel",
                "jsgearhighlowaccn",
                "jsgearhighhighaccn",
                "dirsense",
            ],
        },
        {
            "msg_id": 0x04E7,
            "fxn_name": "mot_req_joystickparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x04E8,
            "fxn_name": "mot_get_joystickparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<H4LH",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "jsgearlowmaxvel",
                "jsgearhighmaxvel",
                "jsgearhighlowaccn",
                "jsgearhighhighaccn",
                "dirsense",
            ],
        },
        {
            "msg_id": 0x04D4,
            "fxn_name": "mot_set_currentloopparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<9H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "phase",
                "kpcurrent",
                "kicurrent",
                "ilimcurrent",
                "deadband",
                "kff",
                "paramsetix",
                "",
            ],
        },
        {
            "msg_id": 0x04D5,
            "fxn_name": "mot_req_currentloopparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x04D6,
            "fxn_name": "mot_get_currentloopparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<9H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "phase",
                "kpcurrent",
                "kicurrent",
                "ilimcurrent",
                "deadband",
                "kff",
                "paramsetix",
                "",
            ],
        },
        {
            "msg_id": 0x04E9,
            "fxn_name": "mot_set_settledcurrentloopparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<9H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "phase",
                "kpsettled",
                "kisettled",
                "ilimsettled",
                "deadband",
                "kffsettled",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x04EA,
            "fxn_name": "mot_req_settledcurrentloopparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x04EB,
            "fxn_name": "mot_get_settledcurrentloopparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<9H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "phase",
                "kpsettled",
                "kisettled",
                "ilimsettled",
                "deadband",
                "kffsettled",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x04F0,
            "fxn_name": "mot_set_stageaxisparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3H16s7L4H4L",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "stageid",
                "axisid",
                "partnoaxis",
                "serialnumber",
                "countsperunit",
                "minpos",
                "maxpos",
                "maxaccn",
                "maxdec",
                "maxvel",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x04F1,
            "fxn_name": "mot_req_stageaxisparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x04F2,
            "fxn_name": "mot_get_stageaxisparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3H16s7L4H4L",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "stageid",
                "axisid",
                "partnoaxis",
                "serialnumber",
                "countsperunit",
                "minpos",
                "maxpos",
                "maxaccn",
                "maxdec",
                "maxvel",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x04FE,
            "fxn_name": "mot_set_tstactuatortype",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "actuatorident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0481,
            "fxn_name": "mot_get_statusupdate",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<Hl2LH3L",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident1",
                "position",
                "enccount",
                "statusbits",
                "chanident2",
                "",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x0480,
            "fxn_name": "mot_req_statusupdate",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0491,
            "fxn_name": "mot_get_ustatusupdate",  # add fxn for status bit parsing
            "header_only": False,
            "has_subcmds": False,
            "struct": "<Hl2HL",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "position",
                "velocity",
                "motorcurrent",
                "statusbits",
            ],
        },
        {
            "msg_id": 0x0490,
            "fxn_name": "mot_req_ustatusupdate",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0492,
            "fxn_name": "mot_ack_ustatusupdate",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0429,
            "fxn_name": "mot_req_statusbits",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x042A,
            "fxn_name": "mot_get_statusbits",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<HL",
            "params": ["msg_id", "", "dst", "src", "chanident", "statusbits"],
        },
        {
            "msg_id": 0x046B,
            "fxn_name": "mot_suspend_endofmovemsgs",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x046C,
            "fxn_name": "mot_resume_endofmovemsgs",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0500,
            "fxn_name": "mot_set_trigger",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "mode", "dst", "src"],
        },
        {
            "msg_id": 0x0501,
            "fxn_name": "mot_req_trigger",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0502,
            "fxn_name": "mot_get_trigger",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "mode", "dst", "src"],
        },
        {
            "msg_id": 0x0520,
            "fxn_name": "mot_set_kcubemmiparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H2LH2L3HL2H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "jsmode",
                "jsmaxvel",
                "jsaccn",
                "dirsense",
                "presetpos1",
                "presetpos2",
                "dispbrightness",
                "disptimeout",
                "dispdimlevel",
                "presetpos3",
                "jssensitivity",
                "",
            ],
        },
        {
            "msg_id": 0x0521,
            "fxn_name": "mot_req_kcubemmiparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0522,
            "fxn_name": "mot_get_kcubemmiparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H2LH2L3HL2H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "jsmode",
                "jsmaxvel",
                "jsaccn",
                "dirsense",
                "presetpos1",
                "presetpos2",
                "dispbrightness",
                "disptimeout",
                "dispdimlevel",
                "presetpos3",
                "jssensitivity",
                "",
            ],
        },
        {
            "msg_id": 0x0523,
            "fxn_name": "mot_set_kcubetrigioconfig",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<6HQH",  # should be 6H10s but cant set strings to 0 (will fix at some point)
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "trig1mode",
                "trig1polarity",
                "trig2mode",
                "trig2polarity",
                "",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x0524,
            "fxn_name": "mot_req_kcubetrigconfig",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0525,
            "fxn_name": "mot_get_kcubetrigconfig",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<6H10s",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "trig1mode",
                "trig1polarity",
                "trig2mode",
                "trig2polarity",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x0526,
            "fxn_name": "mot_set_kcubepostrigparams",  # See 0x0528
            "header_only": False,
            "has_subcmds": False,
            "struct": "<H8L3L",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "startposfwd",
                "intervalfwd",
                "numpulsesfwd",
                "startposrev",
                "intervalrev",
                "numpulsesrev",
                "pulsewidth",
                "numcycles",
                "",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x0527,
            "fxn_name": "mot_req_kcubepostrigparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0528,
            "fxn_name": "mot_get_kcubepostrigparams",  # Manual says 36 bytes, but machine sends 52 bytes
            "header_only": False,
            "has_subcmds": False,
            "struct": "<H8L3L",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "startposfwd",
                "intervalfwd",
                "numpulsesfwd",
                "startposrev",
                "intervalrev",
                "numpulsesrev",
                "pulsewidth",
                "numcycles",
                "",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x0529,
            "fxn_name": "mot_set_kcubekstloopparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H6LQ",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "loopmode",
                "prop",
                "_int",
                "diff",
                "pidclip",
                "pidtol",
                "encoderconst",
                "",
            ],
        },
        {
            "msg_id": 0x052A,
            "fxn_name": "mot_req_kcubekstloopparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x052B,
            "fxn_name": "mot_get_kcubekstloopparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H6LH",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "loopmode",
                "prop",
                "_int",
                "diff",
                "pidclip",
                "pidtol",
                "encoderconst",
                "",
            ],
        },
        {
            "msg_id": 0x0A00,
            "fxn_name": "mot_set_movesyncharray",  # variable length
            "header_only": False,
            "has_subcmds": False,
            "struct": "<4H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "arrayid",
                "channels",
                "numpoints",
                "startix",
            ],  # + timepos[]
        },
        {
            "msg_id": 0x0A03,
            "fxn_name": "mot_set_movesynchparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<5HL3H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "arrayid",
                "cyclestartix",
                "cycleendix",
                "numcycles",
                "endix",
                "deceleration",
                "",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x0A06,
            "fxn_name": "mot_move_synchstart",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3H",
            "params": ["msg_id", "", "dst", "src", "arrayid", "channels", "trigger"],
        },
        {
            "msg_id": 0x0A10,
            "fxn_name": "mot_set_rastermoveparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<4H3LH3LH",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "scanpattern",
                "triggersource",
                "triggermode",
                "triggerpolarity",
                "startposx",
                "reldistancex",
                "numcyclesx",
                "dwelltimex",
                "startposy",
                "reldistancey",
                "numcyclesy",
                "dwelltimey",
            ],
        },
        {
            "msg_id": 0x0A11,
            "fxn_name": "mot_req_rastermoveparams",  # not documented
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0A12,
            "fxn_name": "mot_get_rastermoveparams",  # not documented
            "header_only": False,
            "has_subcmds": False,
            "struct": "<4H3LH3LH",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "scanpattern",
                "triggersource",
                "triggermode",
                "triggerpolarity",
                "startposx",
                "reldistancex",
                "numcyclesx",
                "dwelltimex",
                "startposy",
                "reldistancey",
                "numcyclesy",
                "dwelltimey",
            ],
        },
        {
            "msg_id": 0x0A13,
            "fxn_name": "mot_move_raster",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "command", "dst", "src"],
        },
        {
            "msg_id": 0x0510,
            "fxn_name": "mot_set_mff_operparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<H2L2HL2H3L",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "itransittime",
                "itransittimeadc",
                "opermode1",
                "sigmode1",
                "pulsewidth1",
                "opermode2",
                "sigmode2",
                "pulsewidth2",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x0511,
            "fxn_name": "mot_req_mff_operparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0512,
            "fxn_name": "mot_get_mff_operparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<H2L2HL2H3L",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "itransittime",
                "itransittimeadc",
                "opermode1",
                "sigmode1",
                "pulsewidth1",
                "opermode2",
                "sigmode2",
                "pulsewidth2",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x04C0,
            "fxn_name": "mot_set_sol_operatingmode",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "mode", "dst", "src"],
        },
        {
            "msg_id": 0x04C1,
            "fxn_name": "mot_req_sol_operatingmode",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x04C2,
            "fxn_name": "mot_get_sol_operatingmode",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "mode", "dst", "src"],
        },
        {
            "msg_id": 0x04C3,
            "fxn_name": "mot_set_sol_cycleparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<H3L",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "ontime",
                "offtime",
                "numcycles",
            ],
        },
        {
            "msg_id": 0x04C4,
            "fxn_name": "mot_req_sol_cycleparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x04C5,
            "fxn_name": "mot_get_sol_cycleparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<H3L",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "ontime",
                "offtime",
                "numcycles",
            ],
        },
        {
            "msg_id": 0x04C6,
            "fxn_name": "mot_set_sol_interlockmode",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "mode", "dst", "src"],
        },
        {
            "msg_id": 0x04C7,
            "fxn_name": "mot_req_sol_interlockmode",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x04C8,
            "fxn_name": "mot_get_sol_interlockmode",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "mode", "dst", "src"],
        },
        {
            "msg_id": 0x04CB,
            "fxn_name": "mot_set_sol_state",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "state", "dst", "src"],
        },
        {
            "msg_id": 0x04CC,
            "fxn_name": "mot_req_sol_state",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x04CD,
            "fxn_name": "mot_get_sol_state",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "mode", "dst", "src"],
        },
    ],
    "nt": [
        {
            "msg_id": 0x07E7,
            "fxn_name": "nt_set_eepromparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H",
            "params": ["msg_id", "", "dst", "src", "chanident", "msgid"],
        },
        {
            "msg_id": 0x07E8,
            "fxn_name": "nt_set_tna_dispsettings",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<H",
            "params": ["msg_id", "", "dst", "src", "dispintensity"],
        },
        {
            "msg_id": 0x07E9,
            "fxn_name": "nt_req_tna_dispsettings",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "1", "", "dst", "src"],
        },
        {
            "msg_id": 0x07EA,
            "fxn_name": "nt_get_tna_dispsettings",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<H",
            "params": ["msg_id", "", "dst", "src", "dispintensity"],
        },
        {
            "msg_id": 0x07EB,
            "fxn_name": "nt_set_tnaiosettings",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<4H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "lvoutrange",
                "lvoutroute",
                "hvoutrange",
                "signioroute",
            ],
        },
        {
            "msg_id": 0x07EC,
            "fxn_name": "nt_req_tnaiosettings",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "0", "dst", "src"],
        },
        {
            "msg_id": 0x07ED,
            "fxn_name": "nt_get_tnaiosettings",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<4H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "lvoutrange",
                "lvoutroute",
                "hvoutrange",
                "signioroute",
            ],
        },
    ],
    "pol": [
        {
            "msg_id": 0x0530,
            "fxn_name": "pol_set_params",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "", "", "dst", "src"],
        },
        {
            "msg_id": 0x0531,
            "fxn_name": "pol_req_params",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0532,
            "fxn_name": "pol_get_params",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "", "", "dst", "src"],
        },
    ],
    "pz": [
        {
            "msg_id": 0x0640,
            "fxn_name": "pz_set_poscontrolmode",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "mode", "dst", "src"],
        },
        {
            "msg_id": 0x0641,
            "fxn_name": "pz_req_poscontrolmode",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0642,
            "fxn_name": "pz_get_poscontrolmode",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "mode", "dst", "src"],
        },
        {
            "msg_id": 0x0643,
            "fxn_name": "pz_set_outputvolts",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H",
            "params": ["msg_id", "", "dst", "src", "chanident", "voltage"],
        },
        {
            "msg_id": 0x0644,
            "fxn_name": "pz_req_outputvolts",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0645,
            "fxn_name": "pz_get_outputvolts",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H",
            "params": ["msg_id", "", "dst", "src", "chanident", "voltage"],
        },
        {
            "msg_id": 0x0646,
            "fxn_name": "pz_set_outputpos",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H",
            "params": ["msg_id", "", "dst", "src", "chanident", "positionsw"],
        },
        {
            "msg_id": 0x0647,
            "fxn_name": "pz_req_outputpos",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0648,
            "fxn_name": "pz_get_outputpos",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H",
            "params": ["msg_id", "", "dst", "src", "chanident", "positionsw"],
        },
        {
            "msg_id": 0x0652,
            "fxn_name": "pz_set_inputvoltssrc",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H",
            "params": ["msg_id", "", "dst", "src", "chanident", "voltsrc"],
        },
        {
            "msg_id": 0x0653,
            "fxn_name": "pz_req_inputvoltssrc",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0654,
            "fxn_name": "pz_get_inputvoltssrc",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H",
            "params": ["msg_id", "", "dst", "src", "chanident", "voltsrc"],
        },
        {
            "msg_id": 0x0655,
            "fxn_name": "pz_set_piconsts",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "propconst",
                "intconst",
            ],
        },
        {
            "msg_id": 0x0656,
            "fxn_name": "pz_req_piconsts",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0657,
            "fxn_name": "pz_get_piconsts",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "propconst",
                "intconst",
            ],
        },
        {
            "msg_id": 0x065B,
            "fxn_name": "pz_req_pzstatusbits",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "0", "dst", "src"],
        },
        {
            "msg_id": 0x065C,
            "fxn_name": "pz_get_pzstatusbits",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<H2hL",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "opvoltage",
                "position",
                "statusbits",
            ],
        },
        {
            "msg_id": 0x0660,
            "fxn_name": "pz_req_pzstatusupdate",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0661,
            "fxn_name": "pz_get_pzstatusupdate",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<H2hL",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "opvoltage",
                "position",
                "statusbits",
            ],
        },
        {
            "msg_id": 0x0662,
            "fxn_name": "pz_ack_pzstatusupdate",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0690,
            "fxn_name": "pz_set_ppc_pidconsts",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<H4eH",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "pidconstsp",
                "pidconstsi",
                "pidconstsd",
                "pidconstsdfc",
                "pidderivfilteron",
            ],
        },
        {
            "msg_id": 0x0691,
            "fxn_name": "pz_req_ppc_pidconsts",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0692,
            "fxn_name": "pz_get_ppc_pidconsts",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<H4eH",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "pidconstsp",
                "pidconstsi",
                "pidconstsd",
                "pidconstsdfc",
                "pidderivfilteron",
            ],
        },
        {
            "msg_id": 0x0693,
            "fxn_name": "pz_set_ppc_notchparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H2eH2eH",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "filterno",
                "filter1fc",
                "filter1q",
                "notchfilter1on",
                "filter2fc",
                "filter2q",
                "notchfilter2on",
            ],
        },
        {
            "msg_id": 0x0694,
            "fxn_name": "pz_req_ppc_notchparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0695,
            "fxn_name": "pz_get_ppc_notchparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H2eH2eH",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "filterno",
                "filter1fc",
                "filter1q",
                "notchfilter1on",
                "filter2fc",
                "filter2q",
                "notchfilter2on",
            ],
        },
        {
            "msg_id": 0x0696,
            "fxn_name": "pz_set_ppc_iosettings",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<7H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "controlsrc",
                "monitoropsig",
                "monitoropbw",
                "feedbacksrc",
                "fpbrightness",
                "",
            ],
        },
        {
            "msg_id": 0x0697,
            "fxn_name": "pz_req_ppc_iosettings",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "1", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0698,
            "fxn_name": "pz_get_ppc_iosettings",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<7H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "controlsrc",
                "monitoropsig",
                "monitoropbw",
                "feedbacksrc",
                "fpbrightness",
                "",
            ],
        },
        {
            "msg_id": 0x0700,
            "fxn_name": "pz_set_outputlut",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2Hh",
            "params": ["msg_id", "", "dst", "src", "chanident", "index", "output"],
        },
        {
            "msg_id": 0x0701,
            "fxn_name": "pz_req_outputlut",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0702,
            "fxn_name": "pz_get_outputlut",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2Hh",
            "params": ["msg_id", "", "dst", "src", "chanident", "index", "output"],
        },
        {
            "msg_id": 0x0703,
            "fxn_name": "pz_set_outputlutparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3H4LHLH",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "mode",
                "cyclelength",
                "numcycles",
                "delaytime",
                "precyclerest",
                "postcyclerest",
                "optrigstart",
                "optrigwidth",
                "trigrepcycle",
            ],
        },
        {
            "msg_id": 0x0704,
            "fxn_name": "pz_req_outputlutparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0705,
            "fxn_name": "pz_get_outputlutparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3H4LHLH",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "mode",
                "cyclelength",
                "numcycles",
                "delaytime",
                "precyclerest",
                "postcyclerest",
                "optrigstart",
                "optrigwidth",
                "trigrepcycle",
            ],
        },
        {
            "msg_id": 0x0706,
            "fxn_name": "pz_start_lutoutput",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0707,
            "fxn_name": "pz_stop_lutoutput",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "0", "dst", "src"],
        },
        {
            "msg_id": 0x07D0,
            "fxn_name": "pz_set_eepromparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H",
            "params": ["msg_id", "", "dst", "src", "chanident", "msgid"],
        },
        {
            "msg_id": 0x07D1,
            "fxn_name": "pz_set_tpz_dispsettings",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<H",
            "params": ["msg_id", "", "dst", "src", "dispintensity"],
        },
        {
            "msg_id": 0x07D2,
            "fxn_name": "pz_req_tpz_dispsettings",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "1", "0", "dst", "src"],
        },
        {
            "msg_id": 0x07D3,
            "fxn_name": "pz_get_tpz_dispsettings",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<H",
            "params": ["msg_id", "", "dst", "src", "dispintensity"],
        },
        {
            "msg_id": 0x07D4,
            "fxn_name": "pz_set_tpz_iosettings",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<5H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "voltagelimit",
                "hubanalogip",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x07D5,
            "fxn_name": "pz_req_tpz_iosettings",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "1", "", "dst", "src"],
        },
        {
            "msg_id": 0x07D6,
            "fxn_name": "pz_get_tpz_iosettings",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<5H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "voltagelimit",
                "hubanalogip",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x0658,
            "fxn_name": "pz_set_zero",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0650,
            "fxn_name": "pz_req_maxtravel",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0651,
            "fxn_name": "pz_get_maxtravel",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H",
            "params": ["msg_id", "", "dst", "src", "chanident", "travel"],
        },
        {
            "msg_id": 0x0670,
            "fxn_name": "pz_set_iosettings",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<5H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "ampcurrentlim",
                "amplpfilter",
                "feedbacksig",
                "bnctrigorlvout",
            ],
        },
        {
            "msg_id": 0x0671,
            "fxn_name": "pz_req_iosettings",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0672,
            "fxn_name": "pz_get_iosettings",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<5H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "ampcurrentlim",
                "amplpfilter",
                "feedbacksig",
                "bnctrigorlvout",
            ],
        },
        {
            "msg_id": 0x0680,
            "fxn_name": "pz_set_outputmaxvolts",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3H",
            "params": ["msg_id", "", "dst", "src", "chanident", "voltage", "flags"],
        },
        {
            "msg_id": 0x0681,
            "fxn_name": "pz_req_outputmaxvolts",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0682,
            "fxn_name": "pz_get_outputmaxvolts",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3H",
            "params": ["msg_id", "", "dst", "src", "chanident", "voltage", "flags"],
        },
        {
            "msg_id": 0x0683,
            "fxn_name": "pz_set_tpz_slewrates",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "slewopen",
                "slewclosed",
            ],
        },
        {
            "msg_id": 0x0684,
            "fxn_name": "pz_req_tpz_slewrates",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0685,
            "fxn_name": "pz_get_tpz_slewrates",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "slewopen",
                "slewclosed",
            ],
        },
        {
            "msg_id": 0x0708,
            "fxn_name": "pz_set_lutvaluetype",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "luttype", "0", "dst", "src"],
        },
        {
            "msg_id": 0x07DA,
            "fxn_name": "pz_set_tsg_iosettings",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3HL2H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "hubanalogop",
                "displaymode",
                "forcecalib",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x07DB,
            "fxn_name": "pz_req_tsg_iosettings",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x07DC,
            "fxn_name": "pz_get_tsg_iosettings",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3HL2H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "chanident",
                "hubanalogop",
                "displaymode",
                "forcecalib",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x07DD,
            "fxn_name": "pz_req_tsg_reading",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "0", "dst", "src"],
        },
        {
            "msg_id": 0x07DE,
            "fxn_name": "pz_get_tsg_reading",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<HhH",
            "params": ["msg_id", "", "dst", "src", "chanident", "reading", "smoothed"],
        },
        {
            "msg_id": 0x0603,
            "fxn_name": "pz_set_ntmode",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "state", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0604,
            "fxn_name": "pz_req_ntmode",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0605,
            "fxn_name": "pz_get_ntmode",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "state", "mode", "dst", "src"],
        },
        {
            "msg_id": 0x0606,
            "fxn_name": "pz_set_nttrackthreshold",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<f",
            "params": ["msg_id", "", "dst", "src", "thresholdabsreading"],
        },
        {
            "msg_id": 0x0607,
            "fxn_name": "pz_req_nttrackthreshold",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0608,
            "fxn_name": "pz_get_nttrackthreshold",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<f",
            "params": ["msg_id", "", "dst", "src", "thresholdabsreading"],
        },
        {
            "msg_id": 0x0609,
            "fxn_name": "pz_set_ntcirchomepos",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H",
            "params": ["msg_id", "", "dst", "src", "circhomeposa", "circhomeposb"],
        },
        {
            "msg_id": 0x0610,
            "fxn_name": "pz_req_ntcirchomepos",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "", "dst", "src"],
        },
        {
            "msg_id": 0x0611,
            "fxn_name": "pz_get_ntcirchomepos",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2H",
            "params": ["msg_id", "", "dst", "src", "circhomeposa", "circhomeposb"],
        },
        {
            "msg_id": 0x0612,
            "fxn_name": "pz_move_ntcirctohomepos",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0613,
            "fxn_name": "pz_req_ntcirccentrepos",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "1", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0614,
            "fxn_name": "pz_get_ntcirccentrepos",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<2Hf3H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "circposa",
                "circposb",
                "absreading",
                "relreading",
                "range",
                "underoverread",
            ],
        },
        {
            "msg_id": 0x0618,
            "fxn_name": "pz_set_ntcircparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<6H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "circdiamode",
                "circdiasw",
                "circoscfreq",
                "abspwrmincircdia",
                "abspwrmaxcircdia",
                "abspwradjusttype",
            ],
        },
        {
            "msg_id": 0x0619,
            "fxn_name": "pz_req_ntcircparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "1", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0620,
            "fxn_name": "pz_get_ntcircparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<6H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "circdiamode",
                "circdiasw",
                "circoscfreq",
                "abspwrmincircdia",
                "abspwrmaxcircdia",
                "abspwradjusttype",
            ],
        },
        {
            "msg_id": 0x061A,
            "fxn_name": "pz_set_ntcircdia",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",  #! circdia should be u16
            "params": ["msg_id", "circdia", "", "dst", "src"],
        },
        {
            "msg_id": 0x0621,
            "fxn_name": "pz_set_ntcircdialut",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<16H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "lutval0",
                "lutval1",
                "lutval2",
                "lutval3",
                "lutval4",
                "lutval5",
                "lutval6",
                "lutval7",
                "lutval8",
                "lutval9",
                "lutval10",
                "lutval11",
                "lutval12",
                "lutval13",
                "lutval14",
                "lutval15",
            ],
        },
        {
            "msg_id": 0x0622,
            "fxn_name": "pz_req_ntcircdialut",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0623,
            "fxn_name": "pz_get_ntcircdialut",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<16H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "",
                "",
                "lutval2",
                "lutval3",
                "lutval4",
                "lutval5",
                "lutval6",
                "lutval7",
                "lutval8",
                "lutval9",
                "lutval10",
                "lutval11",
                "lutval12",
                "lutval13",
                "lutval14",
                "lutval15",
            ],
        },
        {
            "msg_id": 0x0626,
            "fxn_name": "pz_set_ntphasecompparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "phasecompmode",
                "phasecompasw",
                "phasecompbsw",
            ],
        },
        {
            "msg_id": 0x0627,
            "fxn_name": "pz_req_ntphasecompparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0628,
            "fxn_name": "pz_get_ntphasecompparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "phasecompmode",
                "phasecompasw",
                "phasecompbsw",
            ],
        },
        {
            "msg_id": 0x0630,
            "fxn_name": "pz_set_nttiarangeparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<H3h2H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "rangemode",
                "rangeuplimit",
                "rangedownlimit",
                "settlesamples",
                "rangechangetype",
                "rangesw",
            ],
        },
        {
            "msg_id": 0x0631,
            "fxn_name": "pz_req_nttiarangeparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "1", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0632,
            "fxn_name": "pz_get_nttiarangeparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<H3h2H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "rangemode",
                "rangeuplimit",
                "rangedownlimit",
                "settlesamples",
                "rangechangetype",
                "rangesw",
            ],
        },
        {
            "msg_id": 0x0633,
            "fxn_name": "pz_set_ntgainparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<Hh",
            "params": ["msg_id", "", "dst", "src", "gainctrlmode", "ntgainsw"],
        },
        {
            "msg_id": 0x0634,
            "fxn_name": "pz_req_ntgainparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0635,
            "fxn_name": "pz_get_ntgainparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<Hh",
            "params": ["msg_id", "", "dst", "src", "gainctrlmode", "ntgainsw"],
        },
        {
            "msg_id": 0x0636,
            "fxn_name": "pz_set_nttialpfilterparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<5L",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "param1",
                "param2",
                "param3",
                "param4",
                "param5",
            ],
        },
        {
            "msg_id": 0x0637,
            "fxn_name": "pz_req_nttialpfilterparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0638,
            "fxn_name": "pz_get_nttialpfilterparams",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<5L",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "param1",
                "param2",
                "param3",
                "param4",
                "param5",
            ],
        },
        {
            "msg_id": 0x0639,
            "fxn_name": "pz_req_nttiareading",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x063A,
            "fxn_name": "pz_get_nttiareading",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<f3H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "absreading",
                "relreading",
                "range",
                "underoverread",
            ],
        },
        {
            "msg_id": 0x063B,
            "fxn_name": "pz_set_ntfeedbacksrc",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "inpsrc", "0", "dst", "src"],
        },
        {
            "msg_id": 0x063C,
            "fxn_name": "pz_req_ntfeedbacksrc",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x063D,
            "fxn_name": "pz_get_ntfeedbacksrc",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "inpsrc", "0", "dst", "src"],
        },
        {
            "msg_id": 0x063E,
            "fxn_name": "pz_req_ntstatusbits",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "0", "dst", "src"],
        },
        {
            "msg_id": 0x063F,
            "fxn_name": "pz_get_ntstatusbits",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<L",  # documentation is incomprehensible (as per usual)
            "params": ["msg_id", "", "dst", "src", "statusbits"],
        },
        {
            "msg_id": 0x0664,
            "fxn_name": "pz_req_ntstatusupdate",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0665,
            "fxn_name": "pz_get_ntstatusupdate",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<3Hf3HL3HH",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "circposa",
                "circposb",
                "circdia",
                "absreading",
                "relreading",
                "range",
                "underoverread",
                "statusbits",
                "ntgain",
                "phasecompa",
                "phasecompb",
                "",
            ],
        },
        {
            "msg_id": 0x0666,
            "fxn_name": "pz_ack_ntstatusupdate",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0699,
            "fxn_name": "pz_req_pidcriteria",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "", "", "dst", "src"],
        },
        {
            "msg_id": 0x069A,
            "fxn_name": "pz_get_pidcriteria",  # not documented
            "header_only": False,
            "has_subcmds": False,
            "struct": "<7H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "channel",
                "index",
                "priority",
                "targeterrwin",
                "",
                "",
                "",
            ],
        },
        {
            "msg_id": 0x069B,
            "fxn_name": "pz_set_pidcriteria",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<7H",
            "params": [
                "msg_id",
                "",
                "dst",
                "src",
                "channel",
                "index",
                "priority",
                "targeterrwin",
                "",
                "",
                "",
            ],
        },
    ],
    "pzmot": [
        {
            "msg_id": 0x08C0,
            "fxn_name": "pzmot_set_params",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "", "", "dst", "src"],
        },
        {
            "msg_id": 0x08C1,
            "fxn_name": "pzmot_req_params",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x08C2,
            "fxn_name": "pzmot_get_params",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "", "", "dst", "src"],
        },
        {
            "msg_id": 0x08D4,
            "fxn_name": "pzmot_move_absolute",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "", "", "dst", "src"],
        },
        {
            "msg_id": 0x08D6,
            "fxn_name": "pzmot_move_completed",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "", "", "dst", "src"],
        },
        {
            "msg_id": 0x08D9,
            "fxn_name": "pzmot_move_jog",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "", "", "dst", "src"],
        },
        {
            "msg_id": 0x08E0,
            "fxn_name": "pzmot_req_statusupdate",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x08E1,
            "fxn_name": "pzmot_get_statusupdate",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "", "", "dst", "src"],
        },
        {
            "msg_id": 0x08E2,
            "fxn_name": "pzmot_ack_statusupdate",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "", "", "dst", "src"],
        },
    ],
    "quad": [
        {
            "msg_id": 0x0870,
            "fxn_name": "quad_set_params",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "", "", "dst", "src"],
        },
        {
            "msg_id": 0x0871,
            "fxn_name": "quad_req_params",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0872,
            "fxn_name": "quad_get_params",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "", "", "dst", "src"],
        },
        {
            "msg_id": 0x0880,
            "fxn_name": "quad_req_statusupdate",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0881,
            "fxn_name": "quad_get_statusupdate",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "", "", "dst", "src"],
        },
        {
            "msg_id": 0x0882,
            "fxn_name": "quad_ack_statusupdate",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "", "", "dst", "src"],
        },
        {
            "msg_id": 0x0875,
            "fxn_name": "quad_set_eepromparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "", "", "dst", "src"],
        },
    ],
    "rack": [
        {
            "msg_id": 0x0060,
            "fxn_name": "rack_req_bayused",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "bayident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0061,
            "fxn_name": "rack_get_bayused",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "bayident", "baystate", "dst", "src"],
        },
        {
            "msg_id": 0x0226,
            "fxn_name": "rack_req_statusbits",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "statusbits", "", "dst", "src"],
        },
        {
            "msg_id": 0x0227,
            "fxn_name": "rack_get_statusbits",
            "header_only": False,
            "has_subcmds": False,
            "struct": "<L",
            "params": ["msg_id", "", "dst", "src", "statusbits"],
        },
        {
            "msg_id": 0x0228,
            "fxn_name": "rack_set_digoutputs",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "digop", "", "dst", "src"],
        },
        {
            "msg_id": 0x0229,
            "fxn_name": "rack_req_digoutputs",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "0", "0", "dst", "src"],
        },
        {
            "msg_id": 0x0230,
            "fxn_name": "rack_get_digoutputs",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "digop", "0", "dst", "src"],
        },
    ],
    "restorefactorysettings": [
        {
            "msg_id": 0x0686,
            "fxn_name": "restorefactorysettings",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "", "", "dst", "src"],
        },
    ],
    "tec": [
        {
            "msg_id": 0x0840,
            "fxn_name": "tec_set_params",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "", "", "dst", "src"],
        },
        {
            "msg_id": 0x0841,
            "fxn_name": "tec_req_params",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0842,
            "fxn_name": "tec_get_params",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "", "", "dst", "src"],
        },
        {
            "msg_id": 0x0850,
            "fxn_name": "tec_set_eepromparams",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "", "", "dst", "src"],
        },
        {
            "msg_id": 0x0860,
            "fxn_name": "tec_req_statusupdate",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "chanident", "", "dst", "src"],
        },
        {
            "msg_id": 0x0861,
            "fxn_name": "tec_get_statusupdate",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "", "", "dst", "src"],
        },
        {
            "msg_id": 0x0862,
            "fxn_name": "tec_ack_statusupdate",
            "header_only": True,
            "has_subcmds": False,
            "struct": "",
            "params": ["msg_id", "", "", "dst", "src"],
        },
    ],
}

id_to_cmd = {}


def build_id_to_cmd():
    for k in cmd_list.keys():
        for c in cmd_list[k]:
            id_to_cmd[c["msg_id"]] = c


def cleanup():
    for k in cmd_list.keys():
        for c in cmd_list[k]:
            try:
                # only lowercase letters and underscores
                for l in c["fxn_name"]:
                    assert l in string.ascii_lowercase + "_"

                assert c["params"][0] == "msg_id"
            except AssertionError as e:
                print(c)
                raise (e)

            if c["header_only"]:
                try:
                    assert len(c["params"]) == 5

                    assert c["params"][3] == "dst"
                    assert c["params"][4] == "src"

                    assert c["struct"] == ""
                    # c["has_subcmds"] = False
                except AssertionError as e:
                    print(c)
                    raise (e)

            else:  # data fxn
                try:
                    assert len(c["params"]) >= 4

                    assert c["params"][1] == ""
                    assert c["params"][2] == "dst"
                    assert c["params"][3] == "src"

                    if c["has_subcmds"] == False:
                        assert c["struct"] != ""
                except AssertionError as e:
                    print(c)
                    raise (e)

                data_param_count = 0
                num_str = ""
                for l in c["struct"][1:]:
                    if l in string.ascii_letters:
                        if num_str != "" and l != "s":
                            data_param_count += int(num_str)
                            num_str = ""
                        elif num_str != "" and l == "s":
                            data_param_count += 1
                            num_str = ""
                        else:
                            data_param_count += 1
                    else:
                        num_str += l

                # print(c)
                # print(data_param_count)
                try:
                    assert data_param_count == len(c["params"]) - 4
                except AssertionError as e:
                    print(c)
                    raise (e)


cleanup()
build_id_to_cmd()
